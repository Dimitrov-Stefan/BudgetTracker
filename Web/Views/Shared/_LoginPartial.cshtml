@using Microsoft.AspNetCore.Identity
@inject SignInManager<Models.Entities.Identity.User> SignInManager
@inject UserManager<Models.Entities.Identity.User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="@Url.ControllerName(typeof(HomeController))" asp-action="@nameof(HomeController)" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-controller="@Url.ControllerName(typeof(AccountController))" asp-action="@nameof(AccountController.Logout)"
                asp-route-returnUrl="@Url.Action(nameof(HomeController.Index), Url.ControllerName(typeof(HomeController)))">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>