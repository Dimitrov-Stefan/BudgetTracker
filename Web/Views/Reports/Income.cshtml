@model Web.Models.Reports.IncomeReportViewModel

@{
    ViewData["Title"] = "Income";
}


<div class="row">
    <h1 class="col-12 text-center">
        @ViewData["Title"]
    </h1>

    <div class="col-12 text-left mb-2 marginl-minus-12">
        <a class="btn btn-primary btn-sm" asp-controller="@Url.ControllerName(typeof(ReportsController))" asp-action="@nameof(ReportsController.Index)">
            <span class="fas fa-arrow-alt-circle-left"></span>
            Back
        </a>
    </div>

    <form method="get" asp-action="@nameof(ReportsController.Income)">

        <div class="row">
            <div class="col-lg-6 col-sm-12">
                <input asp-for="From" type="text" placeholder="Date" class="form-control datetimepicker" autocomplete="off" />
            </div>
            <div class="col-6">
                <input asp-for="To" type="text" placeholder="Date" class="form-control datetimepicker" autocomplete="off" />
            </div>
        </div>


        <ul class="list-no-bullet col-12 row">
            @for (int i = 0; i < Model.SelectedItems.Count; i++)
            {
                <li class="list-item">
                    <div class="custom-control custom-checkbox">
                        <input class="custom-control-input" type="checkbox" asp-for="SelectedItems[i].IsSelected" />
                        <label class="custom-control-label mt-1 mb-1 ml-2 mr-2" asp-for="SelectedItems[i].IsSelected">@Model.SelectedItems[i].FinancialItem.Name</label>
                    </div>

                    <input type="hidden" asp-for="SelectedItems[i].FinancialItem.Id" />
                    <input type="hidden" asp-for="SelectedItems[i].FinancialItem.Name" />
                </li>
            }
        </ul>


        <div class="row col-12 justify-content-start">
            <input type="submit" value="Filter" class="btn btn-dark" />
        </div>
    </form>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    Financial Item
                </th>
                <th>
                    Balance
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.IncomeReport.FinancialItemReportRows)
            {
                <tr>
                    <td>@item.FinancialItem.Name</td>

                    <td>@item.Sum</td>
                </tr>
            }

            <tr>
                <td><strong>Total:</strong></td>

                <td><strong>@Model.IncomeReport.Total</strong></td>
            </tr>
        </tbody>
    </table>
    <div class="col-lg-4 col-md-6 col-sm-12">
        <canvas id="myChart" width="400" height="400"></canvas>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datetimepicker').datetimepicker({
                inline: true,
                timepicker: false
            });
        });
    </script>

    <script type="text/javascript" src="~/lib/chartjs-plugins/chartjs-plugin-labels.js">
    </script>

    <script>
        $(document).ready(function () {
            var labelss = [@Html.Raw(string.Join(',', @Model.IncomeReport.FinancialItemReportRows.Select(firr => "'" + firr.FinancialItem.Name + "'")))];
            var values = [@Html.Raw(string.Join(',', @Model.IncomeReport.FinancialItemReportRows.Select(firr => firr.Sum)))];

            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labelss,
                    datasets: [{
                label: '# of Votes',
                        data: values,
                        backgroundColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Income'
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                                    }
                            }]
                    },
                    plugins: {
                        labels: {
                            // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'
                            render: 'percentage'
                        }
                    }
                }
        });
        });
    </script>

}