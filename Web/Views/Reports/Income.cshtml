@model Web.Models.Reports.IncomeReportViewModel

@{
    ViewData["Title"] = "Income";
}


<div class="row">
    <div class="col-12">
        <h1 class="text-center">
            @ViewData["Title"]
        </h1>

        <form method="get" asp-action="@nameof(ReportsController.Income)">

            <label asp-for="From">From Date</label>
            <div class="input-group col-4">
                <div class="input-group-prepend">
                    <span class="input-group-text">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </span>
                </div>
                <input asp-for="From" type="text" placeholder="Date" class="form-control datepicker" autocomplete="off" />
            </div>

            <label asp-for="To">To Date</label>
            <div class="input-group col-4">
                <div class="input-group-prepend">
                    <span class="input-group-text">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </span>
                </div>
                <input asp-for="To" type="text" placeholder="Date" class="form-control datepicker" autocomplete="off" />
            </div>

            <div>
                <ul class="list-no-bullet">
                    @for (int i = 0; i < Model.SelectedItems.Count; i++)
                    {
                        <li>
                            <input type="checkbox" asp-for="SelectedItems[i].IsSelected" />
                            <label asp-for="SelectedItems[i].IsSelected">@Model.SelectedItems[i].FinancialItem.Name</label>
                            <input type="hidden" asp-for="SelectedItems[i].FinancialItem.Id" />
                            <input type="hidden" asp-for="SelectedItems[i].FinancialItem.Name" />
                        </li>
                    }
                </ul>
            </div>

            <input type="submit" value="Filter" class="btn btn-default" />
        </form>

        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        Financial Item
                    </th>
                    <th>
                        Balance
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.IncomeReport.FinancialItemReportRows)
                {
                    <tr>
                        <td>@item.FinancialItem.Name</td>

                        <td>@item.Sum</td>
                    </tr>
                }

                <tr>
                    <td><strong>Total:</strong></td>

                    <td><strong>@Model.IncomeReport.Total</strong></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-6">
        <canvas id="myChart" width="400" height="400"></canvas>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".datepicker").datepicker({ format: 'mm/dd/yyyy', autoclose: true, todayBtn: 'linked' })
        });
    </script>

    <script>
        $(document).ready(function () {
            var labelss = [@Html.Raw(string.Join(',', @Model.IncomeReport.FinancialItemReportRows.Select(firr => "'" + firr.FinancialItem.Name + "'")))];
            var values = [@Html.Raw(string.Join(',', @Model.IncomeReport.FinancialItemReportRows.Select(firr => firr.Sum)))];

            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labelss,
                    datasets: [{
                label: '# of Votes',
                        data: values,
                        backgroundColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                            }
                    }]
                    }
            }
        });
        });
    </script>

}